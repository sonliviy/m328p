/*
  TM74HC595Display.cpp - Library
*/
 
#include "TM74HC595D isplay.h"

void TM74HC595Display::timerIsr()
{
  send(_DATA[0]);
  send(0b0001);
  digitalWrite(_RCLK, LOW);
  digitalWrite(_RCLK, HIGH);
  send(_DATA[1]);
  send(0b0010);
  digitalWrite(_RCLK, LOW);
  digitalWrite(_RCLK, HIGH);
  send(_DATA[2]);
  send(0b0100);
  digitalWrite(_RCLK, LOW);
  digitalWrite(_RCLK, HIGH);
  send(_DATA[3]);
  send(0b1000);
  digitalWrite(_RCLK, LOW);
  digitalWrite(_RCLK, HIGH);
}


void TM74HC595Display::send(unsigned char X)
{

  for (int i = 8; i >= 1; i--)
  {
    if (X & 0x80)
    {
      digitalWrite(_DIO, HIGH);
    }
    else
    {
      digitalWrite(_DIO, LOW);
    }
    X <<= 1;
    digitalWrite(_SCLK, LOW);
    digitalWrite(_SCLK, HIGH);  
  }
}

void TM74HC595Display::dispFloat(float f, int afterPoint) {
  char tmp[50];
  dtostrf(f, 0, afterPoint, tmp);
  String str = String(tmp);
  int len = str.length();
  int i = 0;
  int sn = 0;
  int n[4];

  while (i < len && sn <= 3) {
    char ch = str.charAt(i);
    i++;
    if (ch == '.') {
      n[sn - 1] &= 0b01111111;
    } else if (ch == '-') {
      n[sn] = 0b10111111;
      sn++;
    }
    else {
      n[sn] = _LED_OF[((String)ch).toInt()];
      sn++;
    }
  }

  for (int i = 0; i < sn; i++) {
    set(n[sn-1 - i], i);
  }
}


void TM74HC595Display::digit4(int n, bool showZero)
{
  int n1, n2, n3, n4;
  n1 = (int)  n % 10;
  n2 = (int) ((n % 100)-n1)/10;
  n3 = (int) ((n % 1000) - n2 - n1) / 100;
  n4 = (int) ((n % 10000) - n3 - n2 - n1) / 1000;

	set(_LED_OF[n1], 0);
    if(showZero || n>9)set(_LED_OF[n2], 1);
    if(showZero || n>99)set(_LED_OF[n3], 2);
    if(showZero || n>999)set(_LED_OF[n4], 3);
}

void TM74HC595Display::digit4(int n)
{
  digit4(n,false);
}

void TM74HC595Display::digit4showZero(int n)
{
	digit4(n, true);
}


void TM74HC595Display::digit2(int n, int port)
{
	 int n1, n2;
  n1 = (int)  n % 10;
  n2 = (int) ((n % 100)-n1)/10;
  
   set(_LED_OF[n1], port);
   set(_LED_OF[n2], port+1); 

}

void TM74HC595Display::set(unsigned char X, int port ){
	_DATA[port] = X;
}

void TM74HC595Display::clear(){
  _DATA[0]= 0xFF;
  _DATA[1]= 0xFF;
  _DATA[2]= 0xFF;
  _DATA[3]= 0xFF;
}
